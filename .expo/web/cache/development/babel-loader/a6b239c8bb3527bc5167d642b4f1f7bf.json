{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"theme\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Title from \"../Typography/v2/Title\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DialogTitle = function DialogTitle(_ref) {\n  var _theme$colors;\n\n  var children = _ref.children,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isV3 = theme.isV3;\n  var TextComponent = isV3 ? Text : Title;\n\n  var headerTextStyle = _objectSpread({\n    color: isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text\n  }, isV3 ? theme.fonts.headlineSmall : {});\n\n  return React.createElement(TextComponent, _extends({\n    variant: \"headlineSmall\",\n    accessibilityRole: \"header\",\n    style: [styles.text, isV3 && styles.v3Text, headerTextStyle, style]\n  }, rest), children);\n};\n\nDialogTitle.displayName = 'Dialog.Title';\nvar styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default withTheme(DialogTitle);\nexport { DialogTitle };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;;AAiDA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAgD;EAAA;;EAAA,IAA7CC,QAA6C,QAA7CA,QAA6C;EAAA,IAAnCC,KAAmC,QAAnCA,KAAmC;EAAA,IAA5BC,KAA4B,QAA5BA,KAA4B;EAAA,IAAlBC,IAAkB;;EAClE,IAAQC,IAAR,GAAiBH,KAAjB,CAAQG,IAAR;EAEA,IAAMC,aAAa,GAAGD,IAAI,GAAGP,IAAH,GAAUD,KAApC;;EAEA,IAAMU,eAAe;IACnBC,KAAK,EAAEH,IAAI,GAAGH,KAAK,CAACO,MAANP,CAAaQ,SAAhB,oBAA4BR,KAAK,CAACO,MAAlC,kDAA4BE,cAAcC;EADlC,GAEfP,IAAI,GAAGH,KAAK,CAACW,KAANX,CAAYY,aAAf,GAA+B,EAFpB,CAArB;;EAKA,OACElB,oBAACU,aAAD;IACES,OAAO,EAAC,eADV;IAEEC,iBAAiB,EAAC,QAFpB;IAGEb,KAAK,EAAE,CAACc,MAAM,CAACL,IAAR,EAAcP,IAAI,IAAIY,MAAM,CAACC,MAA7B,EAAqCX,eAArC,EAAsDJ,KAAtD;EAHT,GAIMC,IAJN,GAMGH,QANH,CADF;AAVF;;AAsBAD,WAAW,CAACmB,WAAZnB,GAA0B,cAA1BA;AAEA,IAAMiB,MAAM,GAAGG,UAAU,CAACC,MAAXD,CAAkB;EAC/BR,IAAI,EAAE;IACJU,SAAS,EAAE,EADP;IAEJC,YAAY,EAAE,EAFV;IAGJC,gBAAgB,EAAE;EAHd,CADyB;EAM/BN,MAAM,EAAE;IACNI,SAAS,EAAE,EADL;IAENC,YAAY,EAAE;EAFR;AANuB,CAAlBH,CAAf;AAYA,eAAerB,SAAS,CAACC,WAAD,CAAxB;AAGA,SAASA,WAAT","names":["React","Title","Text","withTheme","DialogTitle","children","theme","style","rest","isV3","TextComponent","headerTextStyle","color","colors","onSurface","_theme$colors","text","fonts","headlineSmall","variant","accessibilityRole","styles","v3Text","displayName","StyleSheet","create","marginTop","marginBottom","marginHorizontal"],"sources":["DialogTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/v2/Title';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({ children, theme, style, ...rest }: Props) => {\n  const { isV3 } = theme;\n\n  const TextComponent = isV3 ? Text : Title;\n\n  const headerTextStyle = {\n    color: isV3 ? theme.colors.onSurface : theme.colors?.text,\n    ...(isV3 ? theme.fonts.headlineSmall : {}),\n  };\n\n  return (\n    <TextComponent\n      variant=\"headlineSmall\"\n      accessibilityRole=\"header\"\n      style={[styles.text, isV3 && styles.v3Text, headerTextStyle, style]}\n      {...rest}\n    >\n      {children}\n    </TextComponent>\n  );\n};\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n  v3Text: {\n    marginTop: 16,\n    marginBottom: 16,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"module"}