{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TextInput, Button } from 'react-native-paper';\nimport tw from 'tailwind-react-native-classnames';\nimport React, { useState } from 'react';\nimport { useStateContext } from \"../context/ContextProvider\";\nimport { postData } from \"../fetchMethod\";\nimport { backendhost } from \"../configure\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatbotScreen = function ChatbotScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      context = _useState2[0],\n      setContext = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tag1 = _useState4[0],\n      setTag1 = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tag2 = _useState6[0],\n      setTag2 = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tag3 = _useState8[0],\n      setTag3 = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tag4 = _useState10[0],\n      setTag4 = _useState10[1];\n\n  var _useStateContext = useStateContext(),\n      chats = _useStateContext.chats,\n      setChats = _useStateContext.setChats,\n      profile = _useStateContext.profile;\n\n  var handleClick = function handleClick() {\n    setChats([].concat(_toConsumableArray(chats), [{\n      name: 'user',\n      text: context\n    }]));\n    console.log(chats);\n    postData(backendhost + 'chatbot', {\n      context: context,\n      tag1: tag1,\n      tag2: tag2,\n      tag3: tag3,\n      tag4: tag4,\n      name: profile.name\n    }).then(function (data) {\n      console.log(typeof data);\n      console.log(data);\n      setChats([].concat(_toConsumableArray(chats), [{\n        name: 'user',\n        text: context\n      }, {\n        name: 'bot',\n        text: data[0]\n      }]));\n      setTag1(data[1]);\n      setTag2(data[2]);\n      setTag3(data[3]);\n      setTag4(data[4]);\n    });\n    setContext('');\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(SafeAreaView, {\n      style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"top-8 pb-32\"]))),\n      children: _jsx(ScrollView, {\n        children: chats.map(function (chat, index) {\n          return _jsxs(View, {\n            style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"flex p-2 flex-row\"]))),\n            children: [chat.name === 'bot' && _jsxs(_Fragment, {\n              children: [_jsx(Image, {\n                style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"w-8 h-8 p-1\"]))),\n                source: require(\"../assets/bot.png\")\n              }), _jsx(Text, {\n                style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"bg-gray-200 p-2 rounded-lg text-lg w-80\"]))),\n                children: chat.text\n              })]\n            }), chat.name === 'user' && _jsxs(_Fragment, {\n              children: [_jsx(Text, {\n                style: tw(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"bg-yellow-400 p-2 rounded-lg ml-auto text-xl italic\"]))),\n                children: chat.text\n              }), _jsx(Image, {\n                style: tw(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"w-8 h-8 p-1\"]))),\n                source: require(\"../assets/avatar.png\")\n              })]\n            })]\n          }, chat.text + \"-\" + index);\n        })\n      })\n    }), _jsx(View, {\n      style: tw(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"absolute bottom-0\"]))),\n      children: _jsxs(View, {\n        style: tw(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"flex-row\"]))),\n        children: [_jsx(TextInput, {\n          style: tw(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"w-64\"]))),\n          theme: {\n            roundness: 50\n          },\n          mode: \"outlined\",\n          onChangeText: function onChangeText(text) {\n            return setContext(text);\n          },\n          value: context\n        }), _jsx(View, {\n          style: tw(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"pt-1 pl-1\"]))),\n          children: _jsx(Button, {\n            style: tw(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"w-32 p-2\"]))),\n            theme: {\n              roundness: 50\n            },\n            mode: \"contained\",\n            onPress: function onPress() {\n              return handleClick();\n            },\n            children: \"Send\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default ChatbotScreen;","map":{"version":3,"names":["TextInput","Button","tw","React","useState","useStateContext","postData","backendhost","ChatbotScreen","context","setContext","tag1","setTag1","tag2","setTag2","tag3","setTag3","tag4","setTag4","chats","setChats","profile","handleClick","name","text","console","log","then","data","map","chat","index","require","roundness"],"sources":["D:/newUber/screens/ChatbotScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, SafeAreaView, View, Image, ScrollView } from 'react-native'\r\nimport { TextInput, Button } from 'react-native-paper';\r\nimport tw from 'tailwind-react-native-classnames'\r\nimport React, { useState } from 'react'\r\nimport { useStateContext } from '../context/ContextProvider'\r\nimport { postData } from '../fetchMethod'\r\nimport { backendhost } from '../configure' \r\n\r\nconst ChatbotScreen = () => {\r\n  const [context, setContext] = useState('')\r\n  const [tag1, setTag1] = useState(false)\r\n  const [tag2, setTag2] = useState(true)\r\n  const [tag3, setTag3] = useState(false)\r\n  const [tag4, setTag4] = useState(false)\r\n  const { chats, setChats, profile } = useStateContext()\r\n  const handleClick = () => {\r\n    setChats([...chats, {\r\n      name: 'user',\r\n      text: context\r\n    }])\r\n    console.log(chats)\r\n    postData(backendhost+'chatbot', { context: context, tag1: tag1, tag2: tag2, tag3: tag3, tag4: tag4,name: profile.name })\r\n      .then((data) => {\r\n        console.log(typeof (data))\r\n        console.log(data)\r\n        setChats([...chats, {\r\n          name: 'user',\r\n          text: context\r\n        },{\r\n          name: 'bot',\r\n          text: data[0],\r\n        }])\r\n        setTag1(data[1])\r\n        setTag2(data[2])\r\n        setTag3(data[3])\r\n        setTag4(data[4])\r\n      })\r\n      setContext('')\r\n  }\r\n  return (\r\n    <>\r\n      <SafeAreaView style={tw`top-8 pb-32`}>\r\n        <ScrollView>\r\n          {chats.map((chat, index) => {\r\n            return (\r\n              <View style={tw`flex p-2 flex-row`} key={`${chat.text}-${index}`}>\r\n                {chat.name === 'bot' &&\r\n                  <><Image style={tw`w-8 h-8 p-1`} source={require('../assets/bot.png')} /><Text style={tw`bg-gray-200 p-2 rounded-lg text-lg w-80`}>\r\n                    {chat.text}\r\n                  </Text></>}\r\n                {chat.name === 'user' &&\r\n                  <><Text style={tw`bg-yellow-400 p-2 rounded-lg ml-auto text-xl italic`}>\r\n                    {chat.text}\r\n                  </Text>\r\n                    <Image style={tw`w-8 h-8 p-1`} source={require('../assets/avatar.png')} /></>}\r\n              </View>\r\n            )\r\n          }\r\n          )}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n\r\n      <View style={tw`absolute bottom-0`}>\r\n        <View style={tw`flex-row`}>\r\n          <TextInput\r\n            style={tw`w-64`}\r\n            theme={{ roundness: 50 }}\r\n            mode='outlined'\r\n            onChangeText={text => setContext(text)}\r\n            value={context}\r\n          //onFocus={() => navigation.navigate(\"SetPickUp\")}\r\n          />\r\n          <View style={tw`pt-1 pl-1`}>\r\n            <Button\r\n              style={tw`w-32 p-2`}\r\n              theme={{ roundness: 50 }}\r\n              mode=\"contained\"\r\n              onPress={() => handleClick()}\r\n            >\r\n              Send\r\n            </Button>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ChatbotScreen\r\n"],"mappings":";;;;;;;;;;;;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,OAAOC,EAAP,MAAe,kCAAf;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT;AACA,SAASC,QAAT;AACA,SAASC,WAAT;;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,gBAA8BJ,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOK,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwBN,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOO,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBR,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOS,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBV,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOW,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBZ,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOa,IAAP;EAAA,IAAaC,OAAb;;EACA,uBAAqCb,eAAe,EAApD;EAAA,IAAQc,KAAR,oBAAQA,KAAR;EAAA,IAAeC,QAAf,oBAAeA,QAAf;EAAA,IAAyBC,OAAzB,oBAAyBA,OAAzB;;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBF,QAAQ,8BAAKD,KAAL,IAAY;MAClBI,IAAI,EAAE,MADY;MAElBC,IAAI,EAAEf;IAFY,CAAZ,GAAR;IAIAgB,OAAO,CAACC,GAAR,CAAYP,KAAZ;IACAb,QAAQ,CAACC,WAAW,GAAC,SAAb,EAAwB;MAAEE,OAAO,EAAEA,OAAX;MAAoBE,IAAI,EAAEA,IAA1B;MAAgCE,IAAI,EAAEA,IAAtC;MAA4CE,IAAI,EAAEA,IAAlD;MAAwDE,IAAI,EAAEA,IAA9D;MAAmEM,IAAI,EAAEF,OAAO,CAACE;IAAjF,CAAxB,CAAR,CACGI,IADH,CACQ,UAACC,IAAD,EAAU;MACdH,OAAO,CAACC,GAAR,CAAY,OAAQE,IAApB;MACAH,OAAO,CAACC,GAAR,CAAYE,IAAZ;MACAR,QAAQ,8BAAKD,KAAL,IAAY;QAClBI,IAAI,EAAE,MADY;QAElBC,IAAI,EAAEf;MAFY,CAAZ,EAGN;QACAc,IAAI,EAAE,KADN;QAEAC,IAAI,EAAEI,IAAI,CAAC,CAAD;MAFV,CAHM,GAAR;MAOAhB,OAAO,CAACgB,IAAI,CAAC,CAAD,CAAL,CAAP;MACAd,OAAO,CAACc,IAAI,CAAC,CAAD,CAAL,CAAP;MACAZ,OAAO,CAACY,IAAI,CAAC,CAAD,CAAL,CAAP;MACAV,OAAO,CAACU,IAAI,CAAC,CAAD,CAAL,CAAP;IACD,CAfH;IAgBElB,UAAU,CAAC,EAAD,CAAV;EACH,CAvBD;;EAwBA,OACE;IAAA,WACE,KAAC,YAAD;MAAc,KAAK,EAAER,EAAF,qFAAnB;MAAA,UACE,KAAC,UAAD;QAAA,UACGiB,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;UAC1B,OACE,MAAC,IAAD;YAAM,KAAK,EAAE7B,EAAF,6FAAX;YAAA,WACG4B,IAAI,CAACP,IAAL,KAAc,KAAd,IACC;cAAA,WAAE,KAAC,KAAD;gBAAO,KAAK,EAAErB,EAAF,uFAAZ;gBAA+B,MAAM,EAAE8B,OAAO;cAA9C,EAAF,EAAyE,KAAC,IAAD;gBAAM,KAAK,EAAE9B,EAAF,mHAAX;gBAAA,UACtE4B,IAAI,CAACN;cADiE,EAAzE;YAAA,EAFJ,EAKGM,IAAI,CAACP,IAAL,KAAc,MAAd,IACC;cAAA,WAAE,KAAC,IAAD;gBAAM,KAAK,EAAErB,EAAF,+HAAX;gBAAA,UACC4B,IAAI,CAACN;cADN,EAAF,EAGE,KAAC,KAAD;gBAAO,KAAK,EAAEtB,EAAF,uFAAZ;gBAA+B,MAAM,EAAE8B,OAAO;cAA9C,EAHF;YAAA,EANJ;UAAA,GAA4CF,IAAI,CAACN,IAAjD,SAAyDO,KAAzD,CADF;QAaD,CAdA;MADH;IADF,EADF,EAsBE,KAAC,IAAD;MAAM,KAAK,EAAE7B,EAAF,6FAAX;MAAA,UACE,MAAC,IAAD;QAAM,KAAK,EAAEA,EAAF,oFAAX;QAAA,WACE,KAAC,SAAD;UACE,KAAK,EAAEA,EAAF,gFADP;UAEE,KAAK,EAAE;YAAE+B,SAAS,EAAE;UAAb,CAFT;UAGE,IAAI,EAAC,UAHP;UAIE,YAAY,EAAE,sBAAAT,IAAI;YAAA,OAAId,UAAU,CAACc,IAAD,CAAd;UAAA,CAJpB;UAKE,KAAK,EAAEf;QALT,EADF,EASE,KAAC,IAAD;UAAM,KAAK,EAAEP,EAAF,uFAAX;UAAA,UACE,KAAC,MAAD;YACE,KAAK,EAAEA,EAAF,sFADP;YAEE,KAAK,EAAE;cAAE+B,SAAS,EAAE;YAAb,CAFT;YAGE,IAAI,EAAC,WAHP;YAIE,OAAO,EAAE;cAAA,OAAMX,WAAW,EAAjB;YAAA,CAJX;YAAA;UAAA;QADF,EATF;MAAA;IADF,EAtBF;EAAA,EADF;AA+CD,CA9ED;;AAkFA,eAAed,aAAf"},"metadata":{},"sourceType":"module"}