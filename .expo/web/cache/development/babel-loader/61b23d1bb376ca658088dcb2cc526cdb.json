{"ast":null,"code":"import color from 'color';\n\nvar getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {\n  var theme = _ref.theme,\n      customColor = _ref.customColor;\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {\n  var theme = _ref2.theme,\n      customUncheckedColor = _ref2.customUncheckedColor;\n\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getAndroidRippleColor = function getAndroidRippleColor(_ref3) {\n  var theme = _ref3.theme,\n      checkedColor = _ref3.checkedColor,\n      disabled = _ref3.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nvar getAndroidControlColor = function getAndroidControlColor(_ref4) {\n  var theme = _ref4.theme,\n      checked = _ref4.checked,\n      disabled = _ref4.disabled,\n      checkedColor = _ref4.checkedColor,\n      uncheckedColor = _ref4.uncheckedColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n\n  return uncheckedColor;\n};\n\nexport var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {\n  var theme = _ref5.theme,\n      disabled = _ref5.disabled,\n      checked = _ref5.checked,\n      customColor = _ref5.customColor,\n      customUncheckedColor = _ref5.customUncheckedColor;\n  var checkedColor = getAndroidCheckedColor({\n    theme: theme,\n    customColor: customColor\n  });\n  var uncheckedColor = getAndroidUncheckedColor({\n    theme: theme,\n    customUncheckedColor: customUncheckedColor\n  });\n  return {\n    rippleColor: getAndroidRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    }),\n    selectionControlColor: getAndroidControlColor({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      checkedColor: checkedColor,\n      uncheckedColor: uncheckedColor\n    })\n  };\n};\n\nvar getIOSCheckedColor = function getIOSCheckedColor(_ref6) {\n  var theme = _ref6.theme,\n      disabled = _ref6.disabled,\n      customColor = _ref6.customColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getIOSRippleColor = function getIOSRippleColor(_ref7) {\n  var theme = _ref7.theme,\n      checkedColor = _ref7.checkedColor,\n      disabled = _ref7.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {\n  var theme = _ref8.theme,\n      disabled = _ref8.disabled,\n      customColor = _ref8.customColor;\n  var checkedColor = getIOSCheckedColor({\n    theme: theme,\n    disabled: disabled,\n    customColor: customColor\n  });\n  return {\n    checkedColor: checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    })\n  };\n};","map":{"version":3,"mappings":"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","names":["color","getAndroidCheckedColor","theme","customColor","isV3","colors","primary","accent","getAndroidUncheckedColor","customUncheckedColor","onSurfaceVariant","dark","text","alpha","rgb","string","getAndroidRippleColor","checkedColor","disabled","onSurface","fade","getAndroidControlColor","checked","uncheckedColor","onSurfaceDisabled","getAndroidSelectionControlColor","rippleColor","selectionControlColor","getIOSCheckedColor","getIOSRippleColor","getSelectionControlIOSColor"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}