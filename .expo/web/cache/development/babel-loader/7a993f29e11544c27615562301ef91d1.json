{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"accessibilityLabel\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\", \"showFastPaginationControls\", \"numberOfItemsPerPageList\", \"numberOfItemsPerPage\", \"onItemsPerPageChange\", \"selectPageDropdownLabel\", \"selectPageDropdownAccessibilityLabel\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"../IconButton/IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme, useTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Menu from \"../Menu/Menu\";\nimport Button from \"../Button/Button\";\n\nvar PaginationControls = function PaginationControls(_ref) {\n  var page = _ref.page,\n      numberOfPages = _ref.numberOfPages,\n      onPageChange = _ref.onPageChange,\n      showFastPaginationControls = _ref.showFastPaginationControls;\n  var theme = useTheme();\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  return React.createElement(React.Fragment, null, showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n          color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(0);\n    },\n    accessibilityLabel: \"page-first\"\n  }) : null, React.createElement(IconButton, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n          color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    },\n    accessibilityLabel: \"chevron-left\"\n  }), React.createElement(IconButton, {\n    icon: function icon(_ref4) {\n      var size = _ref4.size,\n          color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    },\n    accessibilityLabel: \"chevron-right\"\n  }), showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref5) {\n      var size = _ref5.size,\n          color = _ref5.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(numberOfPages - 1);\n    },\n    accessibilityLabel: \"page-last\"\n  }) : null);\n};\n\nvar PaginationDropdown = function PaginationDropdown(_ref6) {\n  var numberOfItemsPerPageList = _ref6.numberOfItemsPerPageList,\n      numberOfItemsPerPage = _ref6.numberOfItemsPerPage,\n      onItemsPerPageChange = _ref6.onItemsPerPageChange;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showSelect = _React$useState2[0],\n      toggleSelect = _React$useState2[1];\n\n  return React.createElement(Menu, {\n    visible: showSelect,\n    onDismiss: function onDismiss() {\n      return toggleSelect(!showSelect);\n    },\n    anchor: React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return toggleSelect(true);\n      },\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle\n    }, \"\" + numberOfItemsPerPage)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(function (option) {\n    return React.createElement(Menu.Item, {\n      key: option,\n      titleStyle: option === numberOfItemsPerPage && {\n        color: colors === null || colors === void 0 ? void 0 : colors.primary\n      },\n      onPress: function onPress() {\n        onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n        toggleSelect(false);\n      },\n      title: option\n    });\n  }));\n};\n\nvar DataTablePagination = function DataTablePagination(_ref7) {\n  var label = _ref7.label,\n      accessibilityLabel = _ref7.accessibilityLabel,\n      page = _ref7.page,\n      numberOfPages = _ref7.numberOfPages,\n      onPageChange = _ref7.onPageChange,\n      style = _ref7.style,\n      theme = _ref7.theme,\n      _ref7$showFastPaginat = _ref7.showFastPaginationControls,\n      showFastPaginationControls = _ref7$showFastPaginat === void 0 ? false : _ref7$showFastPaginat,\n      numberOfItemsPerPageList = _ref7.numberOfItemsPerPageList,\n      numberOfItemsPerPage = _ref7.numberOfItemsPerPage,\n      onItemsPerPageChange = _ref7.onItemsPerPageChange,\n      selectPageDropdownLabel = _ref7.selectPageDropdownLabel,\n      selectPageDropdownAccessibilityLabel = _ref7.selectPageDropdownAccessibilityLabel,\n      rest = _objectWithoutProperties(_ref7, _excluded);\n\n  var labelColor = color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && React.createElement(View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange\n  })), React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), React.createElement(View, {\n    style: styles.iconsContainer\n  }, React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages\n  })));\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nexport default withTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"mappings":"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","names":["React","color","IconButton","Text","withTheme","useTheme","MaterialCommunityIcon","Menu","Button","PaginationControls","page","numberOfPages","onPageChange","showFastPaginationControls","theme","textColor","isV3","colors","onSurface","text","icon","size","name","direction","I18nManager","getConstants","isRTL","iconColor","disabled","onPress","accessibilityLabel","PaginationDropdown","numberOfItemsPerPageList","numberOfItemsPerPage","onItemsPerPageChange","useState","showSelect","toggleSelect","visible","onDismiss","anchor","mode","style","styles","button","contentStyle","map","option","Item","key","titleStyle","primary","title","DataTablePagination","label","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","labelColor","alpha","rgb","string","View","container","optionsContainer","numberOfLines","iconsContainer","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign"],"sources":["DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton/IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme, useTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Button from '../Button/Button';\nimport type { Theme } from '../../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: Theme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const theme = useTheme();\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}