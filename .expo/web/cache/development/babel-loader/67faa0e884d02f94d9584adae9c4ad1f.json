{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\nimport { getFABGroupColors } from \"./utils\";\n\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n      icon = _ref.icon,\n      open = _ref.open,\n      _onPress = _ref.onPress,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme,\n      style = _ref.style,\n      fabStyle = _ref.fabStyle,\n      visible = _ref.visible,\n      testID = _ref.testID,\n      onStateChange = _ref.onStateChange,\n      colorProp = _ref.color,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n      customBackdropColor = _ref.backdropColor;\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      backdrop = _React$useRef.current;\n\n  var animations = React.useRef(actions.map(function () {\n    return new Animated.Value(open ? 1 : 0);\n  }));\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      prevActions = _React$useState2[0],\n      setPrevActions = _React$useState2[1];\n\n  var scale = theme.animation.scale;\n  var isV3 = theme.isV3;\n  React.useEffect(function () {\n    if (open) {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), Animated.stagger(isV3 ? 15 : 50 * scale, animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      Animated.parallel([Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(animations.current.map(function (animation) {\n        return Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n\n  var _getFABGroupColors = getFABGroupColors({\n    theme: theme,\n    customBackdropColor: customBackdropColor\n  }),\n      labelColor = _getFABGroupColors.labelColor,\n      backdropColor = _getFABGroupColors.backdropColor,\n      stackedFABBackgroundColor = _getFABGroupColors.stackedFABBackgroundColor;\n\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.5, 1]\n    }) : 1;\n  });\n  var translations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [24, -8]\n    }) : -8;\n  });\n  var labelTranslations = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [8, -8]\n    }) : -8;\n  });\n\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, style]\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: close\n  }, React.createElement(Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor\n    }]\n  })), React.createElement(SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n\n    var labelTextStyle = _objectSpread({\n      color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n    }, isV3 ? theme.fonts.titleMedium : {});\n\n    var marginHorizontal = typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n    var accessibilityLabel = typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label;\n    var size = typeof it.size !== 'undefined' ? it.size : 'small';\n    return React.createElement(View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: marginHorizontal\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(View, null, React.createElement(Card, _extends({\n      accessibilityHint: it.accessibilityHint,\n      style: [styles.containerStyle, {\n        transform: [isV3 ? {\n          translateY: labelTranslations[i]\n        } : {\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, isV3 && styles.v3ContainerStyle, it.containerStyle],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\"\n    }, isV3 && {\n      elevation: 0\n    }), React.createElement(Text, {\n      variant: \"titleMedium\",\n      style: [labelTextStyle, it.labelStyle]\n    }, it.label))), React.createElement(FAB, {\n      size: size,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: stackedFABBackgroundColor\n      }, isV3 && {\n        transform: [{\n          translateY: translations[i]\n        }]\n      }, it.style],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(FAB, {\n    onPress: function onPress() {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress();\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    testID: testID,\n    variant: variant\n  })));\n};\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup);\nvar FABGroupWithTheme = withTheme(FABGroup);\nexport { FABGroupWithTheme as FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","FAB","Text","Card","withTheme","getFABGroupColors","FABGroup","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","testID","onStateChange","colorProp","color","variant","customBackdropColor","backdropColor","useRef","Animated","Value","backdrop","current","animations","map","useState","prevActions","setPrevActions","scale","animation","isV3","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","close","toggle","labelColor","stackedFABBackgroundColor","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","translations","labelTranslations","length","_","i","View","pointerEvents","styles","container","TouchableWithoutFeedback","backgroundColor","SafeAreaView","safeArea","it","labelTextStyle","labelTextColor","fonts","titleMedium","marginHorizontal","size","label","key","item","accessibilityHint","containerStyle","transform","translateY","v3ContainerStyle","accessibilityRole","elevation","labelStyle","accessibilityState","expanded","fab","displayName","FABGroupWithTheme","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","flexDirection"],"sources":["FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\nimport type { Theme } from '../../types';\nimport { getFABGroupColors } from './utils';\n\nexport type Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `accessibilityHint`: accessibility hint for the action\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `containerStyle`: pass additional styles for the fab item label container, for example, `backgroundColor` @supported Available in 5.x\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `fontSize`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   * - `size`: size of action item. Defaults to `small`. @supported Available in v5.x\n   * - `testID`: testID to be used on tests\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    accessibilityHint?: string;\n    style?: StyleProp<ViewStyle>;\n    containerStyle?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<TextStyle>;\n    onPress: () => void;\n    size?: 'small' | 'medium';\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-group.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n  variant = 'primary',\n  backdropColor: customBackdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n  const { isV3 } = theme;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          isV3 ? 15 : 50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale, isV3]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { labelColor, backdropColor, stackedFABBackgroundColor } =\n    getFABGroupColors({ theme, customBackdropColor });\n\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1],\n        })\n      : 1\n  );\n\n  const translations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [24, -8],\n        })\n      : -8\n  );\n  const labelTranslations = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [8, -8],\n        })\n      : -8\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => {\n            const labelTextStyle = {\n              color: it.labelTextColor ?? labelColor,\n              ...(isV3 ? theme.fonts.titleMedium : {}),\n            };\n            const marginHorizontal =\n              typeof it.size === 'undefined' || it.size === 'small' ? 24 : 16;\n            const accessibilityLabel =\n              typeof it.accessibilityLabel !== 'undefined'\n                ? it.accessibilityLabel\n                : it.label;\n            const size = typeof it.size !== 'undefined' ? it.size : 'small';\n\n            return (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={[\n                  styles.item,\n                  {\n                    marginHorizontal,\n                  },\n                ]}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <View>\n                    <Card\n                      accessibilityHint={it.accessibilityHint}\n                      style={\n                        [\n                          styles.containerStyle,\n                          {\n                            transform: [\n                              isV3\n                                ? { translateY: labelTranslations[i] }\n                                : { scale: scales[i] },\n                            ],\n                            opacity: opacities[i],\n                          },\n                          isV3 && styles.v3ContainerStyle,\n                          it.containerStyle,\n                        ] as StyleProp<ViewStyle>\n                      }\n                      onPress={() => {\n                        it.onPress();\n                        close();\n                      }}\n                      accessibilityLabel={accessibilityLabel}\n                      accessibilityRole=\"button\"\n                      {...(isV3 && { elevation: 0 })}\n                    >\n                      <Text\n                        variant=\"titleMedium\"\n                        style={[labelTextStyle, it.labelStyle]}\n                      >\n                        {it.label}\n                      </Text>\n                    </Card>\n                  </View>\n                )}\n                <FAB\n                  size={size}\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: stackedFABBackgroundColor,\n                      },\n                      isV3 && { transform: [{ translateY: translations[i] }] },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    close();\n                  }}\n                  accessibilityLabel={accessibilityLabel}\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            );\n          })}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n          variant={variant}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  containerStyle: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  v3ContainerStyle: {\n    backgroundColor: 'transparent',\n    elevation: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}