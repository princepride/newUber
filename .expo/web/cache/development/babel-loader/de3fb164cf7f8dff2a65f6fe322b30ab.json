{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { TextInput, Button } from 'react-native-paper';\nimport tw from 'tailwind-react-native-classnames';\nimport { useStateContext } from \"../context/ContextProvider\";\nimport React, { useState, useEffect, Image } from 'react';\nimport { postData } from \"../fetchMethod\";\nimport { backendhost } from \"../configure\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SetPickUp = function SetPickUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useStateContext = useStateContext(),\n      profile = _useStateContext.profile,\n      scheduleTime = _useStateContext.scheduleTime;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      destination = _useState2[0],\n      setDestination = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showImage = _useState4[0],\n      setShowImage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imagesrc = _useState6[0],\n      setImagesrc = _useState6[1];\n\n  var handleClick = function handleClick() {\n    console.log(destination);\n    postData(backendhost + 'map', {\n      destination: destination\n    }).then(function (image) {\n      console.log(image);\n      setImagesrc(image);\n      setShowImage(true);\n    });\n  };\n\n  console.log(scheduleTime);\n  return _jsxs(SafeAreaView, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"top-8\"]))),\n    children: [_jsx(TextInput, {\n      style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"w-full\"]))),\n      theme: {\n        roundness: 50\n      },\n      mode: \"outlined\",\n      label: \"Start Place\",\n      placeholder: \"Where to?\",\n      value: \"University Town, NUS\",\n      editable: false,\n      left: _jsx(TextInput.Icon, {\n        icon: \"magnify\"\n      })\n    }), _jsx(View, {\n      style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"pt-1\"])))\n    }), _jsx(TextInput, {\n      style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"w-full\"]))),\n      theme: {\n        roundness: 50\n      },\n      mode: \"outlined\",\n      label: \"Go To Pin\",\n      placeholder: profile.destination,\n      onChange: function onChange(text) {\n        return setDestination(text);\n      },\n      left: _jsx(TextInput.Icon, {\n        icon: \"magnify\"\n      })\n    }), _jsx(Button, {\n      style: tw(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"w-32 p-2\"]))),\n      theme: {\n        roundness: 50\n      },\n      mode: \"contained\",\n      onPress: function onPress() {\n        return handleClick();\n      },\n      children: \"Confirm\"\n    }), showImage && _jsx(Image, {\n      source: require(imagesrc)\n    })]\n  });\n};\n\nexport default SetPickUp;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["TextInput","Button","tw","useStateContext","React","useState","useEffect","Image","postData","backendhost","SetPickUp","navigation","profile","scheduleTime","destination","setDestination","showImage","setShowImage","imagesrc","setImagesrc","handleClick","console","log","then","image","roundness","text","require","styles","StyleSheet","create"],"sources":["D:/newUber/screens/SetPickUp.jsx"],"sourcesContent":["import { StyleSheet, View, SafeAreaView } from 'react-native'\r\nimport { TextInput, Button } from 'react-native-paper';\r\nimport tw from 'tailwind-react-native-classnames'\r\nimport { useStateContext } from '../context/ContextProvider'\r\nimport React, { useState, useEffect, Image } from 'react'\r\nimport { postData } from '../fetchMethod'\r\nimport { backendhost } from '../configure' \r\n\r\nconst SetPickUp = ({ navigation }) => {\r\n  const { profile, scheduleTime } = useStateContext();\r\n  const [destination, setDestination] = useState();\r\n  const [showImage, setShowImage ] = useState(false)\r\n  const [imagesrc, setImagesrc] = useState('')\r\n  const handleClick = () => {\r\n    console.log(destination)\r\n    postData(backendhost+'map', { destination: destination})\r\n    .then((image) => {\r\n        console.log(image)\r\n        setImagesrc(image)\r\n        setShowImage(true)\r\n    })\r\n  }\r\n  //useEffect(() => {setPlace(profile.destination)},[])\r\n  console.log(scheduleTime)\r\n  return (\r\n    <SafeAreaView style={tw`top-8`}>\r\n      <TextInput\r\n        style={tw`w-full`}\r\n        theme={{ roundness: 50 }}\r\n        mode='outlined'\r\n        label=\"Start Place\"\r\n        placeholder='Where to?'\r\n        value=\"University Town, NUS\"\r\n        editable={false}\r\n        left={<TextInput.Icon icon=\"magnify\" />}\r\n      //onFocus={() => navigation.navigate(\"SetPickUp\")}\r\n      />\r\n      <View style={tw`pt-1`}></View>\r\n      <TextInput\r\n        style={tw`w-full`}\r\n        theme={{ roundness: 50 }}\r\n        mode='outlined'\r\n        label=\"Go To Pin\"\r\n        placeholder={profile.destination}\r\n        onChange={text => setDestination(text)}\r\n        left={<TextInput.Icon icon=\"magnify\" />}\r\n      //onFocus={() => navigation.navigate(\"SetPickUp\")}\r\n      />\r\n      <Button\r\n        style={tw`w-32 p-2`}\r\n        theme={{ roundness: 50 }}\r\n        mode=\"contained\"\r\n        onPress={() => handleClick()}\r\n      >\r\n        Confirm\r\n      </Button>\r\n      {showImage && <Image source={require(imagesrc)}></Image>}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nexport default SetPickUp\r\n\r\nconst styles = StyleSheet.create({})"],"mappings":";;;;;;;;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,OAAOC,EAAP,MAAe,kCAAf;AACA,SAASC,eAAT;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,KAArC,QAAkD,OAAlD;AACA,SAASC,QAAT;AACA,SAASC,WAAT;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAoB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;;EACpC,uBAAkCR,eAAe,EAAjD;EAAA,IAAQS,OAAR,oBAAQA,OAAR;EAAA,IAAiBC,YAAjB,oBAAiBA,YAAjB;;EACA,gBAAsCR,QAAQ,EAA9C;EAAA;EAAA,IAAOS,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAmCV,QAAQ,CAAC,KAAD,CAA3C;EAAA;EAAA,IAAOW,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAgCZ,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOa,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBC,OAAO,CAACC,GAAR,CAAYR,WAAZ;IACAN,QAAQ,CAACC,WAAW,GAAC,KAAb,EAAoB;MAAEK,WAAW,EAAEA;IAAf,CAApB,CAAR,CACCS,IADD,CACM,UAACC,KAAD,EAAW;MACbH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACAL,WAAW,CAACK,KAAD,CAAX;MACAP,YAAY,CAAC,IAAD,CAAZ;IACH,CALD;EAMD,CARD;;EAUAI,OAAO,CAACC,GAAR,CAAYT,YAAZ;EACA,OACE,MAAC,YAAD;IAAc,KAAK,EAAEX,EAAF,+EAAnB;IAAA,WACE,KAAC,SAAD;MACE,KAAK,EAAEA,EAAF,kFADP;MAEE,KAAK,EAAE;QAAEuB,SAAS,EAAE;MAAb,CAFT;MAGE,IAAI,EAAC,UAHP;MAIE,KAAK,EAAC,aAJR;MAKE,WAAW,EAAC,WALd;MAME,KAAK,EAAC,sBANR;MAOE,QAAQ,EAAE,KAPZ;MAQE,IAAI,EAAE,KAAC,SAAD,CAAW,IAAX;QAAgB,IAAI,EAAC;MAArB;IARR,EADF,EAYE,KAAC,IAAD;MAAM,KAAK,EAAEvB,EAAF;IAAX,EAZF,EAaE,KAAC,SAAD;MACE,KAAK,EAAEA,EAAF,kFADP;MAEE,KAAK,EAAE;QAAEuB,SAAS,EAAE;MAAb,CAFT;MAGE,IAAI,EAAC,UAHP;MAIE,KAAK,EAAC,WAJR;MAKE,WAAW,EAAEb,OAAO,CAACE,WALvB;MAME,QAAQ,EAAE,kBAAAY,IAAI;QAAA,OAAIX,cAAc,CAACW,IAAD,CAAlB;MAAA,CANhB;MAOE,IAAI,EAAE,KAAC,SAAD,CAAW,IAAX;QAAgB,IAAI,EAAC;MAArB;IAPR,EAbF,EAuBE,KAAC,MAAD;MACE,KAAK,EAAExB,EAAF,oFADP;MAEE,KAAK,EAAE;QAAEuB,SAAS,EAAE;MAAb,CAFT;MAGE,IAAI,EAAC,WAHP;MAIE,OAAO,EAAE;QAAA,OAAML,WAAW,EAAjB;MAAA,CAJX;MAAA;IAAA,EAvBF,EA+BGJ,SAAS,IAAI,KAAC,KAAD;MAAO,MAAM,EAAEW,OAAO,CAACT,QAAD;IAAtB,EA/BhB;EAAA,EADF;AAmCD,CAnDD;;AAqDA,eAAeR,SAAf;AAEA,IAAMkB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}