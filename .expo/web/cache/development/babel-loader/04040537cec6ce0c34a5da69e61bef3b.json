{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"elevation\", \"style\", \"theme\", \"onShowAnimationFinished\", \"onHideAnimationFinished\"],\n  _excluded2 = [\"label\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport Button from \"./Button/Button\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nvar DEFAULT_MAX_WIDTH = 960;\n\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n    icon = _ref.icon,\n    children = _ref.children,\n    actions = _ref.actions,\n    contentStyle = _ref.contentStyle,\n    _ref$elevation = _ref.elevation,\n    elevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$onShowAnimationF = _ref.onShowAnimationFinished,\n    onShowAnimationFinished = _ref$onShowAnimationF === void 0 ? function () {} : _ref$onShowAnimationF,\n    _ref$onHideAnimationF = _ref.onHideAnimationFinished,\n    onHideAnimationFinished = _ref$onHideAnimationF === void 0 ? function () {} : _ref$onHideAnimationF,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    position = _React$useRef.current;\n  var _React$useState = React.useState({\n      height: 0,\n      measured: false\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start(onShowAnimationFinished);\n    } else {\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n  var handleLayout = function handleLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n\n  var height = Animated.multiply(position, layout.height);\n  var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [!theme.isV3 && styles.elevation, style],\n    theme: theme\n  }, theme.isV3 && {\n    elevation: elevation\n  }), React.createElement(View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ?\n    [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] :\n    null, !layout.measured && !visible ?\n    {\n      opacity: 0\n    } : null]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(View, {\n    style: styles.icon\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(Text, {\n    style: [styles.message, {\n      color: theme.isV3 ? theme.colors.onSurface : theme.colors.text\n    }],\n    accessibilityLiveRegion: visible ? 'polite' : 'none',\n    accessibilityRole: \"alert\"\n  }, children)), React.createElement(View, {\n    style: styles.actions\n  }, actions.map(function (_ref3, i) {\n    var _theme$colors;\n    var label = _ref3.label,\n      others = _objectWithoutProperties(_ref3, _excluded2);\n    return React.createElement(Button, _extends({\n      key:\n      i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button,\n      textColor: (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary\n    }, others), label);\n  })))));\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  },\n  elevation: {\n    elevation: 1\n  }\n});\nexport default withTheme(Banner);","map":{"version":3,"sources":["Banner.tsx"],"names":["React","Surface","Text","Button","Icon","withTheme","DEFAULT_MAX_WIDTH","Banner","visible","icon","children","actions","contentStyle","elevation","style","theme","onShowAnimationFinished","onHideAnimationFinished","rest","current","position","useRef","Animated","Value","layout","setLayout","useState","height","measured","scale","animation","useEffect","timing","duration","toValue","useNativeDriver","start","handleLayout","nativeEvent","multiply","translateY","add","isV3","styles","wrapper","absolute","transform","opacity","content","message","color","colors","onSurface","text","map","label","others","i","button","primary","create","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAEA,OAAOC,OAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;AAGA,IAAMC,iBAAiB,GAAG,GAA1B;;AAoHA,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAG,IAAA,EAYF;EAZG,IACdC,OADc,GAYH,IAAA,CAXXA,OADc;IAEdC,IAFc,GAYH,IAAA,CAVXA,IAFc;IAGdC,QAHc,GAYH,IAAA,CATXA,QAHc;IAIdC,OAJc,GAYH,IAAA,CARXA,OAJc;IAKdC,YALc,GAYH,IAAA,CAPXA,YALc;IAAA,iBAYH,IAAA,CANXC,SAAS;IAATA,SAAS,+BAAG,CANE;IAOdC,KAPc,GAYH,IAAA,CALXA,KAPc;IAQdC,KARc,GAYH,IAAA,CAJXA,KARc;IAAA,wBAYH,IAAA,CAHXC,uBAAuB;IAAvBA,uBAAuB,sCAAG,YAAM,CAAE,CATpB;IAAA,wBAYH,IAAA,CAFXC,uBAAuB;IAAvBA,uBAAuB,sCAAG,YAAM,CAAE,CAVpB;IAWXC,IAAAA,4BACQ,IAAA;EACX,oBAA8BlB,KAAK,CAACqB,MAANrB,CAC5B,IAAIsB,QAAQ,CAACC,KAAb,CAAmBf,OAAO,GAAG,CAAH,GAAO,CAAjC,CAD4BR,CAA9B;IAAiBoB,QAAAA,iBAATD,OAAO;EAGf,sBAA4B,KAAK,CAACO,QAAN,CAGzB;MACDC,MAAM,EAAE,CADP;MAEDC,QAAQ,EAAE;IAFT,CAHyB,CAA5B;IAAA;IAAOJ,MAAD;IAASC,SAAT;EAQN,IAAQI,KAAAA,GAAUd,KAAK,CAACe,SAAxB,CAAQD,KAAAA;EAER7B,KAAK,CAAC+B,SAAN/B,CAAgB,YAAM;IACpB,IAAIQ,OAAJ,EAAa;MAEXc,QAAQ,CAACU,MAATV,CAAgBF,QAAhBE,EAA0B;QACxBW,QAAQ,EAAE,GAAA,GAAMJ,KADQ;QAExBK,OAAO,EAAE,CAFe;QAGxBC,eAAe,EAAE;MAHO,CAA1Bb,CAAAA,CAIGc,KAJHd,CAISN,uBAJTM,CAAAA;IAKD,CAPD,MAOO;MAELA,QAAQ,CAACU,MAATV,CAAgBF,QAAhBE,EAA0B;QACxBW,QAAQ,EAAE,GAAA,GAAMJ,KADQ;QAExBK,OAAO,EAAE,CAFe;QAGxBC,eAAe,EAAE;MAHO,CAA1Bb,CAAAA,CAIGc,KAJHd,CAISL,uBAJTK,CAAAA;IAKD;EACF,CAhBDtB,EAgBG,CAACQ,OAAD,EAAUY,QAAV,EAAoBS,KAApB,CAhBH7B,CAAAA;EAkBA,IAAMqC,YAAY,GAAG,SAAfA,YAAY,CAAG,KAAA,EAAkC;IAAjC,IAAEC,WAAAA,GAA+B,KAAA,CAA/BA,WAAAA;IACtB,IAAQX,MAAAA,GAAWW,WAAW,CAACd,MAA/B,CAAQG,MAAAA;IACRF,SAAS,CAAC;MAAEE,MAAF,EAAEA,MAAF;MAAUC,QAAQ,EAAE;IAApB,CAAD,CAATH;EACD,CAnCU;;EA4CX,IAAME,MAAM,GAAGL,QAAQ,CAACiB,QAATjB,CAAkBF,QAAlBE,EAA4BE,MAAM,CAACG,MAAnCL,CAAf;EAEA,IAAMkB,UAAU,GAAGlB,QAAQ,CAACiB,QAATjB,CACjBA,QAAQ,CAACmB,GAATnB,CAAaF,QAAbE,EAAuB,CAAC,CAAxBA,CADiBA,EAEjBE,MAAM,CAACG,MAFUL,CAAnB;EAIA,OACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EACMJ,IADN,EAAA;IAEE,KAAK,EAAE,CAAC,CAACH,KAAK,CAAC2B,IAAP,IAAeC,MAAM,CAAC9B,SAAvB,EAAkCC,KAAlC,CAFT;IAGE,KAAK,EAAEC;EAHT,CAAA,EAIOA,KAAK,CAAC2B,IAAN3B,IAAc;IAAEF,SAAAA,EAAAA;EAAF,CAJrB,CAAA,EAME,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAAC8B,MAAM,CAACC,OAAR,EAAiBhC,YAAjB;EAAb,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,EAAA;IAAe,KAAK,EAAE;MAAEe,MAAAA,EAAAA;IAAF;EAAtB,CAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAU,IAAV,EAAA;IACE,QAAQ,EAAEU,YADZ;IAEE,KAAK,EAAE,CACL,MAAM,CAACT,QAAP,IAAmB,CAACpB,OAApB;IAGI,CAACmC,MAAM,CAACE,QAAR,EAAkB;MAAEC,SAAS,EAAE,CAAC;QAAEN,UAAAA,EAAAA;MAAF,CAAD;IAAb,CAAlB,CAHJ;IAKI,IANC,EAOL,CAAChB,MAAM,CAACI,QAAR,IAAoB,CAACpB,OAArB;IAGI;MAAEuC,OAAO,EAAE;IAAX,CAHJ,GAII,IAXC;EAFT,CAAA,EAgBE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAEJ,MAAM,CAACK;EAApB,CAAA,EACGvC,IAAI,GACH,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAEkC,MAAM,CAAClC;EAApB,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,MAAM,EAAEA,IAAd;IAAoB,IAAI,EAAE;EAA1B,CAAA,CADF,CADG,GAID,IALN,EAME,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IACE,KAAK,EAAE,CACLkC,MAAM,CAACM,OADF,EAEL;MACEC,KAAK,EAAEnC,KAAK,CAAC2B,IAAN3B,GACHA,KAAK,CAACoC,MAANpC,CAAaqC,SADVrC,GAEHA,KAAK,CAACoC,MAANpC,CAAasC;IAHnB,CAFK,CADT;IASE,uBAAuB,EAAE7C,OAAO,GAAG,QAAH,GAAc,MAThD;IAUE,iBAAiB,EAAC;EAVpB,CAAA,EAYGE,QAZH,CANF,CAhBF,EAqCE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAEiC,MAAM,CAAChC;EAApB,CAAA,EACG,OAAO,CAAC2C,GAAR,CAAY,UAAA,KAAA,EAAuBG,CAAvB,EAAA;IAAA,IAAA,aAAA;IAAA,IAAGF,KAAF,GAAD,KAAA,CAAGA,KAAF;MAAYC,MAAAA,4BAAb,KAAA;IAAA,OACX,KAAA,CAAA,aAAA,CAAC,MAAD,EAAA,QAAA,CAAA;MACE,GAAG;MAAqDC,CAD1D;MAEE,OAAO,EAAA,IAFT;MAGE,IAAI,EAAC,MAHP;MAIE,KAAK,EAAEd,MAAM,CAACe,MAJhB;MAKE,SAAS,EAAA,CAAA,aAAA,GAAE3C,KAAK,CAACoC,MAAR,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEpC,aAAAA,CAAc4C;IAL3B,CAAA,EAMMH,MANN,CAAA,EAQGD,KARH,CADW;EAAA,CAAZ,CADH,CArCF,CAFF,CANF,CADF;AAgED,CA9HD;AAgIA,IAAMZ,MAAM,GAAG,UAAU,CAACiB,MAAX,CAAkB;EAC/BhB,OAAO,EAAE;IACPiB,QAAQ,EAAE,QADH;IAEPC,SAAS,EAAE,QAFJ;IAGPC,KAAK,EAAE,MAHA;IAIPC,QAAQ,EAAE1D;EAJH,CADsB;EAO/BuC,QAAQ,EAAE;IACRzB,QAAQ,EAAE,UADF;IAER6C,GAAG,EAAE,CAFG;IAGRF,KAAK,EAAE;EAHC,CAPqB;EAY/Bf,OAAO,EAAE;IACPkB,aAAa,EAAE,KADR;IAEPC,cAAc,EAAE,YAFT;IAGPC,gBAAgB,EAAE,CAHX;IAIPC,SAAS,EAAE,EAJJ;IAKPC,YAAY,EAAE;EALP,CAZsB;EAmB/B7D,IAAI,EAAE;IACJ8D,MAAM,EAAE;EADJ,CAnByB;EAsB/BtB,OAAO,EAAE;IACPuB,IAAI,EAAE,CADC;IAEPD,MAAM,EAAE;EAFD,CAtBsB;EA0B/B5D,OAAO,EAAE;IACPuD,aAAa,EAAE,KADR;IAEPC,cAAc,EAAE,UAFT;IAGPI,MAAM,EAAE;EAHD,CA1BsB;EA+B/Bb,MAAM,EAAE;IACNa,MAAM,EAAE;EADF,CA/BuB;EAkC/B1D,SAAS,EAAE;IACTA,SAAS,EAAE;EADF;AAlCoB,CAAlB,CAAf;AAuCA,eAAeR,SAAS,CAACE,MAAD,CAAxB","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button/Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport type { $RemoveChildren, Theme } from '../types';\n\nconst DEFAULT_MAX_WIDTH = 960;\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<\n    {\n      label: string;\n    } & Omit<React.ComponentProps<typeof Button>, 'children'>\n  >;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Banner shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * @optional\n   * Optional callback that will be called after the opening animation finished running normally\n   */\n  onShowAnimationFinished?: Animated.EndCallback;\n  /**\n   * @optional\n   * Optional callback that will be called after the closing animation finished running normally\n   */\n  onHideAnimationFinished?: Animated.EndCallback;\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(true);\n *\n *   return (\n *     <Banner\n *       visible={visible}\n *       actions={[\n *         {\n *           label: 'Fix it',\n *           onPress: () => setVisible(false),\n *         },\n *         {\n *           label: 'Learn more',\n *           onPress: () => setVisible(false),\n *         },\n *       ]}\n *       icon={({size}) => (\n *         <Image\n *           source={{\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n *           }}\n *           style={{\n *             width: size,\n *             height: size,\n *           }}\n *         />\n *       )}>\n *       There was a problem processing a transaction on your credit card.\n *     </Banner>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Banner = ({\n  visible,\n  icon,\n  children,\n  actions,\n  contentStyle,\n  elevation = 1,\n  style,\n  theme,\n  onShowAnimationFinished = () => {},\n  onHideAnimationFinished = () => {},\n  ...rest\n}: Props) => {\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start(onShowAnimationFinished);\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start(onHideAnimationFinished);\n    }\n  }, [visible, position, scale]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n  return (\n    <Surface\n      {...rest}\n      style={[!theme.isV3 && styles.elevation, style]}\n      theme={theme}\n      {...(theme.isV3 && { elevation })}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View style={styles.content}>\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon source={icon} size={40} />\n              </View>\n            ) : null}\n            <Text\n              style={[\n                styles.message,\n                {\n                  color: theme.isV3\n                    ? theme.colors.onSurface\n                    : theme.colors.text,\n                },\n              ]}\n              accessibilityLiveRegion={visible ? 'polite' : 'none'}\n              accessibilityRole=\"alert\"\n            >\n              {children}\n            </Text>\n          </View>\n          <View style={styles.actions}>\n            {actions.map(({ label, ...others }, i) => (\n              <Button\n                key={/* eslint-disable-line react/no-array-index-key */ i}\n                compact\n                mode=\"text\"\n                style={styles.button}\n                textColor={theme.colors?.primary}\n                {...others}\n              >\n                {label}\n              </Button>\n            ))}\n          </View>\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n  elevation: {\n    elevation: 1,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"module"}