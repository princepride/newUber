{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\n\nvar getBorderColor = function getBorderColor(_ref) {\n  var theme = _ref.theme,\n      isOutlined = _ref.isOutlined,\n      disabled = _ref.disabled,\n      selectedColor = _ref.selectedColor,\n      backgroundColor = _ref.backgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nvar getTextColor = function getTextColor(_ref2) {\n  var theme = _ref2.theme,\n      isOutlined = _ref2.isOutlined,\n      disabled = _ref2.disabled,\n      selectedColor = _ref2.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nvar getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n      isOutlined = _ref3.isOutlined;\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    var _theme$colors;\n\n    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nvar getBackgroundColor = function getBackgroundColor(_ref4) {\n  var theme = _ref4.theme,\n      isOutlined = _ref4.isOutlined,\n      disabled = _ref4.disabled,\n      customBackgroundColor = _ref4.customBackgroundColor;\n\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({\n    theme: theme,\n    isOutlined: isOutlined\n  });\n};\n\nvar getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {\n  var theme = _ref5.theme,\n      isOutlined = _ref5.isOutlined,\n      disabled = _ref5.disabled,\n      customBackgroundColor = _ref5.customBackgroundColor,\n      showSelectedOverlay = _ref5.showSelectedOverlay;\n  var backgroundColor = getBackgroundColor({\n    theme: theme,\n    disabled: disabled,\n    isOutlined: isOutlined,\n    customBackgroundColor: customBackgroundColor\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0.12).rgb().string();\n      }\n\n      return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0).rgb().string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0.12).rgb().string();\n    }\n\n    return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0).rgb().string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nvar getIconColor = function getIconColor(_ref6) {\n  var theme = _ref6.theme,\n      isOutlined = _ref6.isOutlined,\n      disabled = _ref6.disabled,\n      selectedColor = _ref6.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getUnderlayColor = function getUnderlayColor(_ref7) {\n  var theme = _ref7.theme,\n      isOutlined = _ref7.isOutlined,\n      disabled = _ref7.disabled,\n      selectedColor = _ref7.selectedColor,\n      selectedBackgroundColor = _ref7.selectedBackgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  var textColor = getTextColor({\n    theme: theme,\n    disabled: disabled,\n    selectedColor: selectedColor,\n    isOutlined: isOutlined\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport var getChipColors = function getChipColors(_ref8) {\n  var isOutlined = _ref8.isOutlined,\n      theme = _ref8.theme,\n      selectedColor = _ref8.selectedColor,\n      showSelectedOverlay = _ref8.showSelectedOverlay,\n      customBackgroundColor = _ref8.customBackgroundColor,\n      disabled = _ref8.disabled;\n  var baseChipColorProps = {\n    theme: theme,\n    isOutlined: isOutlined,\n    disabled: disabled\n  };\n  var backgroundColor = getBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor\n  }));\n  var selectedBackgroundColor = getSelectedBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor,\n    showSelectedOverlay: showSelectedOverlay\n  }));\n  return {\n    borderColor: getBorderColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      backgroundColor: backgroundColor\n    })),\n    textColor: getTextColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    iconColor: getIconColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    underlayColor: getUnderlayColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      selectedBackgroundColor: selectedBackgroundColor\n    })),\n    backgroundColor: backgroundColor,\n    selectedBackgroundColor: selectedBackgroundColor\n  };\n};","map":{"version":3,"mappings":"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","names":["color","black","white","getBorderColor","theme","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","surface","secondaryContainer","_theme$colors","getBackgroundColor","customBackgroundColor","getSelectedBackgroundColor","showSelectedOverlay","mix","lighten","darken","getIconColor","getUnderlayColor","selectedBackgroundColor","textColor","fade","getChipColors","baseChipColorProps","borderColor","iconColor","underlayColor"],"sources":["helpers.tsx"],"sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { ColorValue } from 'react-native';\n\ntype BaseProps = {\n  theme: Theme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}