{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport tw from 'tailwind-react-native-classnames';\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatbotScreen = function ChatbotScreen() {\n  var _useState = useState([{\n    name: 'bot',\n    text: \"babababa\"\n  }, {\n    name: 'user',\n    text: \"bababa\"\n  }, {\n    name: 'bot',\n    text: \"babababa\"\n  }, {\n    name: 'user',\n    text: \"bababa\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      chats = _useState2[0],\n      setChats = _useState2[1];\n\n  {}\n  return _jsxs(SafeAreaView, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"top-8\"]))),\n    children: [chats.map(function (chat, index) {\n      return _jsxs(Text, {\n        style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"flex p-2\"]))),\n        children: [chat.name === 'bot' && _jsxs(_Fragment, {\n          children: [_jsx(Image, {\n            style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"w-8 h-8 p-1\"]))),\n            source: require(\"../assets/bot.png\")\n          }), _jsx(Text, {\n            style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"bg-blue-400 p-2 rounded-lg text-xl italic\"]))),\n            children: chat.name + \" : \" + chat.text\n          })]\n        }), chat.name === 'user' && _jsxs(_Fragment, {\n          children: [_jsx(Text, {\n            style: tw(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"bg-yellow-400 p-2 rounded-lg ml-auto text-xl italic\"]))),\n            children: chat.name + \" : \" + chat.text\n          }), _jsx(Image, {\n            style: tw(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"w-8 h-8 p-1\"]))),\n            source: require(\"../assets/avatar.png\")\n          })]\n        })]\n      }, chat.text + \"-\" + index);\n    }), console.log(chats[0].name)]\n  });\n};\n\nexport default ChatbotScreen;\nvar styles = StyleSheet.create({\n  chatbot: {\n    backgroundColor: 'blue'\n  },\n  userbot: {}\n});","map":{"version":3,"names":["tw","React","useState","ChatbotScreen","name","text","chats","setChats","map","chat","index","require","console","log","styles","StyleSheet","create","chatbot","backgroundColor","userbot"],"sources":["C:/Users/wangz/Desktop/newUber/screens/ChatbotScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, SafeAreaView, View,Image } from 'react-native'\r\nimport tw from 'tailwind-react-native-classnames'\r\nimport React,{useState} from 'react'\r\n\r\nconst ChatbotScreen = () => {\r\n  const [chats,setChats] = useState([\r\n    {\r\n      name: 'bot',\r\n      text:\"babababa\"\r\n    },\r\n    {\r\n      name:'user',\r\n      text:\"bababa\"\r\n    },\r\n    {\r\n      name: 'bot',\r\n      text:\"babababa\"\r\n    },\r\n    {\r\n      name:'user',\r\n      text:\"bababa\"\r\n    }\r\n  ])\r\n        {/*(chat.name === 'bot' && <Text style={tw`bg-blue-400`}>{`${chat.name} : ${chat.text}`}</Text>\r\n        )*/}\r\n  return (\r\n    <SafeAreaView style={tw`top-8`}>\r\n      {/*<Text>ChatbotScreen</Text>*/}\r\n      {chats.map((chat,index) =>{\r\n        return(\r\n          <Text style={tw`flex p-2`} key={`${chat.text}-${index}`}>\r\n            {chat.name === 'bot' && \r\n            <><Image style={tw`w-8 h-8 p-1`} source={require('../assets/bot.png')}/><Text style={tw`bg-blue-400 p-2 rounded-lg text-xl italic`}>\r\n            {`${chat.name} : ${chat.text}`}\r\n            </Text></>}\r\n            {chat.name === 'user' && \r\n            <><Text style={tw`bg-yellow-400 p-2 rounded-lg ml-auto text-xl italic`}>\r\n            {`${chat.name} : ${chat.text}`}\r\n            </Text>\r\n            <Image style={tw`w-8 h-8 p-1`} source={require('../assets/avatar.png')}/></>}\r\n          </Text>\r\n        )\r\n      }\r\n\r\n      )}\r\n      {console.log(chats[0].name)}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ChatbotScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  chatbot: {\r\n    backgroundColor: 'blue'\r\n  },\r\n  userbot: {\r\n\r\n  }\r\n})"],"mappings":";;;;;;;;;;AACA,OAAOA,EAAP,MAAe,kCAAf;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,gBAAyBD,QAAQ,CAAC,CAChC;IACEE,IAAI,EAAE,KADR;IAEEC,IAAI,EAAC;EAFP,CADgC,EAKhC;IACED,IAAI,EAAC,MADP;IAEEC,IAAI,EAAC;EAFP,CALgC,EAShC;IACED,IAAI,EAAE,KADR;IAEEC,IAAI,EAAC;EAFP,CATgC,EAahC;IACED,IAAI,EAAC,MADP;IAEEC,IAAI,EAAC;EAFP,CAbgC,CAAD,CAAjC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAaC,QAAb;;EAkBM,CACI;EACV,OACE,MAAC,YAAD;IAAc,KAAK,EAAEP,EAAF,+EAAnB;IAAA,WAEGM,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAe;MACxB,OACE,MAAC,IAAD;QAAM,KAAK,EAAEV,EAAF,oFAAX;QAAA,WACGS,IAAI,CAACL,IAAL,KAAc,KAAd,IACD;UAAA,WAAE,KAAC,KAAD;YAAO,KAAK,EAAEJ,EAAF,uFAAZ;YAA+B,MAAM,EAAEW,OAAO;UAA9C,EAAF,EAAwE,KAAC,IAAD;YAAM,KAAK,EAAEX,EAAF,qHAAX;YAAA,UACpES,IAAI,CAACL,IAD+D,WACrDK,IAAI,CAACJ;UADgD,EAAxE;QAAA,EAFF,EAKGI,IAAI,CAACL,IAAL,KAAc,MAAd,IACD;UAAA,WAAE,KAAC,IAAD;YAAM,KAAK,EAAEJ,EAAF,+HAAX;YAAA,UACES,IAAI,CAACL,IADP,WACiBK,IAAI,CAACJ;UADtB,EAAF,EAGA,KAAC,KAAD;YAAO,KAAK,EAAEL,EAAF,uFAAZ;YAA+B,MAAM,EAAEW,OAAO;UAA9C,EAHA;QAAA,EANF;MAAA,GAAmCF,IAAI,CAACJ,IAAxC,SAAgDK,KAAhD,CADF;IAaD,CAdA,CAFH,EAmBGE,OAAO,CAACC,GAAR,CAAYP,KAAK,CAAC,CAAD,CAAL,CAASF,IAArB,CAnBH;EAAA,EADF;AAuBD,CA5CD;;AAgDA,eAAeD,aAAf;AAEA,IAAMW,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,OAAO,EAAE;IACPC,eAAe,EAAE;EADV,CADsB;EAI/BC,OAAO,EAAE;AAJsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}