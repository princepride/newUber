{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport tw from 'tailwind-react-native-classnames';\nimport React, { useState } from 'react';\nimport { SegmentedButtons } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"text-xl\"]))),\n      children: title\n    })\n  });\n};\n\nvar TimePicker = function TimePicker() {\n  var _React$useState = React.useState('startTime'),\n      _React$useState2 = _slicedToArray(_React$useState, 3),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1],\n      schedule = _React$useState2[2];\n\n  var hoursData = [{\n    data: [\"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"]\n  }];\n  var minutesData = [{\n    data: [\"00\", \"05\", \"10\", \"15\", \"20\", \"25\", \"30\", \"35\", \"40\", \"45\", \"50\", \"55\"]\n  }];\n  return _jsx(View, {\n    style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"justify-center items-center\"]))),\n    children: _jsxs(View, {\n      style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"absolute bg-yellow-400 w-5/6 h-60 items-center pt-2\"]))),\n      children: [_jsx(SegmentedButtons, {\n        value: value,\n        onValueChange: setValue,\n        buttons: [{\n          value: 'startTime',\n          label: 'Start'\n        }, {\n          value: 'endTime',\n          label: 'End'\n        }],\n        style: styles.group\n      }), _jsx(View, {\n        style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"flex-row\"]))),\n        children: _jsx(SectionList, {\n          sections: hoursData,\n          keyExtractor: function keyExtractor(item, index) {\n            return item + index;\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(Item, {\n              title: item\n            });\n          },\n          renderSectionHeader: function renderSectionHeader(_ref3) {\n            var title = _ref3.section.title;\n            return _jsx(Text, {\n              style: styles.header,\n              children: title\n            });\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default TimePicker;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["tw","React","useState","SegmentedButtons","Item","title","styles","item","TimePicker","value","setValue","schedule","hoursData","data","minutesData","label","group","index","section","header","StyleSheet","create"],"sources":["C:/Users/wangz/Desktop/newUber/components/TimePicker.jsx"],"sourcesContent":["import { StyleSheet, Text, View, SectionList } from 'react-native'\r\nimport tw from 'tailwind-react-native-classnames'\r\nimport React,{useState} from 'react'\r\nimport { SegmentedButtons } from 'react-native-paper';\r\n\r\nconst Item = ({ title }) => (\r\n  <View style={styles.item}>\r\n    <Text style={tw`text-xl`}>{title}</Text>\r\n  </View>\r\n);\r\n\r\nconst TimePicker = () => {\r\n  const [value, setValue,schedule] = React.useState('startTime');\r\n\r\n  const hoursData = [{\r\n    data: [\"00\",\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\r\n    \"08\",\"09\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\r\n    \"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\"]\r\n  }]\r\n  const minutesData = [{\r\n    data: [\"00\",\"05\",\"10\",\"15\",\r\n        \"20\",\"25\",\"30\",\"35\",\r\n        \"40\",\"45\",\"50\",\"55\"]\r\n  }]\r\n  return (\r\n    <View style={tw`justify-center items-center`} >\r\n    <View style={tw`absolute bg-yellow-400 w-5/6 h-60 items-center pt-2`}>\r\n    <SegmentedButtons\r\n     value={value}\r\n     onValueChange={setValue}\r\n     buttons={[\r\n       {\r\n         value: 'startTime',\r\n         label: 'Start',\r\n       },\r\n       {\r\n         value: 'endTime',\r\n         label: 'End',\r\n       },\r\n     ]}\r\n     style={styles.group}\r\n   />\r\n   <View style={tw`flex-row`}>\r\n   <SectionList \r\n    sections={hoursData}\r\n    keyExtractor={(item, index) => item + index}\r\n      renderItem={({ item }) => <Item title={item} />}\r\n      renderSectionHeader={({ section: { title } }) => (\r\n        <Text style={styles.header}>{title}</Text>\r\n      )}\r\n   />\r\n   {/*<SectionList \r\n    sections={minutesData}\r\n    keyExtractor={(item, index) => item + index}\r\n      renderItem={({ item }) => <Item title={item} />}\r\n      renderSectionHeader={({ section: { title } }) => (\r\n        <Text style={styles.header}>{title}</Text>\r\n      )}\r\n   />*/}\r\n   </View>\r\n    </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default TimePicker\r\n\r\nconst styles = StyleSheet.create({})"],"mappings":";;;;;;;;;AACA,OAAOA,EAAP,MAAe,kCAAf;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;EAAA,IAAGC,KAAH,QAAGA,KAAH;EAAA,OACX,KAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,IAApB;IAAA,UACE,KAAC,IAAD;MAAM,KAAK,EAAEP,EAAF,iFAAX;MAAA,UAA2BK;IAA3B;EADF,EADW;AAAA,CAAb;;AAMA,IAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;EACvB,sBAAmCP,KAAK,CAACC,QAAN,CAAe,WAAf,CAAnC;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcC,QAAd;EAAA,IAAuBC,QAAvB;;EAEA,IAAMC,SAAS,GAAG,CAAC;IACjBC,IAAI,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EAAqB,IAArB,EAA0B,IAA1B,EAA+B,IAA/B,EAAoC,IAApC,EACN,IADM,EACD,IADC,EACI,IADJ,EACS,IADT,EACc,IADd,EACmB,IADnB,EACwB,IADxB,EAC6B,IAD7B,EAEN,IAFM,EAED,IAFC,EAEI,IAFJ,EAES,IAFT,EAEc,IAFd,EAEmB,IAFnB,EAEwB,IAFxB,EAE6B,IAF7B;EADW,CAAD,CAAlB;EAKA,IAAMC,WAAW,GAAG,CAAC;IACnBD,IAAI,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,EACF,IADE,EACG,IADH,EACQ,IADR,EACa,IADb,EAEF,IAFE,EAEG,IAFH,EAEQ,IAFR,EAEa,IAFb;EADa,CAAD,CAApB;EAKA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEb,EAAF,uGAAX;IAAA,UACA,MAAC,IAAD;MAAM,KAAK,EAAEA,EAAF,+HAAX;MAAA,WACA,KAAC,gBAAD;QACC,KAAK,EAAES,KADR;QAEC,aAAa,EAAEC,QAFhB;QAGC,OAAO,EAAE,CACP;UACED,KAAK,EAAE,WADT;UAEEM,KAAK,EAAE;QAFT,CADO,EAKP;UACEN,KAAK,EAAE,SADT;UAEEM,KAAK,EAAE;QAFT,CALO,CAHV;QAaC,KAAK,EAAET,MAAM,CAACU;MAbf,EADA,EAgBD,KAAC,IAAD;QAAM,KAAK,EAAEhB,EAAF,oFAAX;QAAA,UACA,KAAC,WAAD;UACC,QAAQ,EAAEY,SADX;UAEC,YAAY,EAAE,sBAACL,IAAD,EAAOU,KAAP;YAAA,OAAiBV,IAAI,GAAGU,KAAxB;UAAA,CAFf;UAGG,UAAU,EAAE;YAAA,IAAGV,IAAH,SAAGA,IAAH;YAAA,OAAc,KAAC,IAAD;cAAM,KAAK,EAAEA;YAAb,EAAd;UAAA,CAHf;UAIG,mBAAmB,EAAE;YAAA,IAAcF,KAAd,SAAGa,OAAH,CAAcb,KAAd;YAAA,OACnB,KAAC,IAAD;cAAM,KAAK,EAAEC,MAAM,CAACa,MAApB;cAAA,UAA6Bd;YAA7B,EADmB;UAAA;QAJxB;MADA,EAhBC;IAAA;EADA,EADF;AAuCD,CApDD;;AAsDA,eAAeG,UAAf;AAEA,IAAMF,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf"},"metadata":{},"sourceType":"module"}