{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10;\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput, Button } from 'react-native-paper';\nimport tw from 'tailwind-react-native-classnames';\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatbotScreen = function ChatbotScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      context = _useState2[0],\n      setContext = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tag1 = _useState4[0],\n      setTag1 = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      tag2 = _useState6[0],\n      setTag2 = _useState6[1];\n\n  var _useState7 = useState([{\n    name: 'bot',\n    text: \"babababa\"\n  }, {\n    name: 'user',\n    text: \"bababa\"\n  }, {\n    name: 'bot',\n    text: \"babababa\"\n  }, {\n    name: 'user',\n    text: \"bababa\"\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chats = _useState8[0],\n      setChats = _useState8[1];\n\n  return _jsxs(SafeAreaView, {\n    style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"top-8 h-screen justify-between flex flex-col\"]))),\n    children: [chats.map(function (chat, index) {\n      return _jsxs(Text, {\n        style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"flex p-2\"]))),\n        children: [chat.name === 'bot' && _jsxs(_Fragment, {\n          children: [_jsx(Image, {\n            style: tw(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"w-8 h-8 p-1\"]))),\n            source: require(\"../assets/bot.png\")\n          }), _jsx(Text, {\n            style: tw(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"bg-blue-400 p-2 rounded-lg text-xl italic\"]))),\n            children: chat.text\n          })]\n        }), chat.name === 'user' && _jsxs(_Fragment, {\n          children: [_jsx(Text, {\n            style: tw(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"bg-yellow-400 p-2 rounded-lg ml-auto text-xl italic\"]))),\n            children: chat.text\n          }), _jsx(Image, {\n            style: tw(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"w-8 h-8 p-1\"]))),\n            source: require(\"../assets/avatar.png\")\n          })]\n        })]\n      }, chat.text + \"-\" + index);\n    }), _jsxs(View, {\n      style: tw(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"flex-row\"]))),\n      children: [_jsx(TextInput, {\n        style: tw(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"w-64\"]))),\n        theme: {\n          roundness: 50\n        },\n        mode: \"outlined\",\n        onChangeText: function onChangeText(text) {\n          return setContext(text);\n        }\n      }), _jsx(View, {\n        style: tw(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"pt-1 pl-1\"]))),\n        children: _jsx(Button, {\n          style: tw(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"w-32 p-2\"]))),\n          theme: {\n            roundness: 50\n          },\n          mode: \"contained\",\n          children: \"Send\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default ChatbotScreen;","map":{"version":3,"names":["TextInput","Button","tw","React","useState","ChatbotScreen","context","setContext","tag1","setTag1","tag2","setTag2","name","text","chats","setChats","map","chat","index","require","roundness"],"sources":["C:/Users/wangz/Desktop/newUber/screens/ChatbotScreen.jsx"],"sourcesContent":["import { StyleSheet, Text, SafeAreaView, View, Image } from 'react-native'\r\nimport { TextInput, Button } from 'react-native-paper';\r\nimport tw from 'tailwind-react-native-classnames'\r\nimport React, { useState } from 'react'\r\n\r\nconst ChatbotScreen = () => {\r\n  const [context, setContext] = useState('')\r\n  const [tag1, setTag1] = useState(false)\r\n  const [tag2, setTag2] = useState(true)\r\n  const [chats, setChats] = useState([\r\n    {\r\n      name: 'bot',\r\n      text: \"babababa\"\r\n    },\r\n    {\r\n      name: 'user',\r\n      text: \"bababa\"\r\n    },\r\n    {\r\n      name: 'bot',\r\n      text: \"babababa\"\r\n    },\r\n    {\r\n      name: 'user',\r\n      text: \"bababa\"\r\n    }\r\n  ])\r\n  return (\r\n    <SafeAreaView style={tw`top-8 h-screen justify-between flex flex-col`}>\r\n      {chats.map((chat, index) => {\r\n        return (\r\n          <Text style={tw`flex p-2`} key={`${chat.text}-${index}`}>\r\n            {chat.name === 'bot' &&\r\n              <><Image style={tw`w-8 h-8 p-1`} source={require('../assets/bot.png')} /><Text style={tw`bg-blue-400 p-2 rounded-lg text-xl italic`}>\r\n                {chat.text}\r\n              </Text></>}\r\n            {chat.name === 'user' &&\r\n              <><Text style={tw`bg-yellow-400 p-2 rounded-lg ml-auto text-xl italic`}>\r\n                {chat.text}\r\n              </Text>\r\n                <Image style={tw`w-8 h-8 p-1`} source={require('../assets/avatar.png')} /></>}\r\n          </Text>\r\n        )\r\n      }\r\n      )}\r\n      <View style={tw`flex-row`}>\r\n        <TextInput\r\n          style={tw`w-64`}\r\n          theme={{ roundness: 50 }}\r\n          mode='outlined'\r\n          onChangeText={text => setContext(text)}\r\n          //onFocus={() => navigation.navigate(\"SetPickUp\")}\r\n        />\r\n        <View style={tw`pt-1 pl-1`}>\r\n          <Button\r\n            style={tw`w-32 p-2`}\r\n            theme={{ roundness: 50 }}\r\n            mode=\"contained\"\r\n            //onPress={() => handleClick(\"schedule\")}\r\n          >\r\n            Send\r\n          </Button>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ChatbotScreen\r\n"],"mappings":";;;;;;;;;;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,OAAOC,EAAP,MAAe,kCAAf;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,gBAA8BD,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOE,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwBH,QAAQ,CAAC,KAAD,CAAhC;EAAA;EAAA,IAAOI,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAAwBL,QAAQ,CAAC,IAAD,CAAhC;EAAA;EAAA,IAAOM,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA0BP,QAAQ,CAAC,CACjC;IACEQ,IAAI,EAAE,KADR;IAEEC,IAAI,EAAE;EAFR,CADiC,EAKjC;IACED,IAAI,EAAE,MADR;IAEEC,IAAI,EAAE;EAFR,CALiC,EASjC;IACED,IAAI,EAAE,KADR;IAEEC,IAAI,EAAE;EAFR,CATiC,EAajC;IACED,IAAI,EAAE,MADR;IAEEC,IAAI,EAAE;EAFR,CAbiC,CAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAkBA,OACE,MAAC,YAAD;IAAc,KAAK,EAAEb,EAAF,sHAAnB;IAAA,WACGY,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAiB;MAC1B,OACE,MAAC,IAAD;QAAM,KAAK,EAAEhB,EAAF,oFAAX;QAAA,WACGe,IAAI,CAACL,IAAL,KAAc,KAAd,IACC;UAAA,WAAE,KAAC,KAAD;YAAO,KAAK,EAAEV,EAAF,uFAAZ;YAA+B,MAAM,EAAEiB,OAAO;UAA9C,EAAF,EAAyE,KAAC,IAAD;YAAM,KAAK,EAAEjB,EAAF,qHAAX;YAAA,UACtEe,IAAI,CAACJ;UADiE,EAAzE;QAAA,EAFJ,EAKGI,IAAI,CAACL,IAAL,KAAc,MAAd,IACC;UAAA,WAAE,KAAC,IAAD;YAAM,KAAK,EAAEV,EAAF,+HAAX;YAAA,UACCe,IAAI,CAACJ;UADN,EAAF,EAGE,KAAC,KAAD;YAAO,KAAK,EAAEX,EAAF,uFAAZ;YAA+B,MAAM,EAAEiB,OAAO;UAA9C,EAHF;QAAA,EANJ;MAAA,GAAmCF,IAAI,CAACJ,IAAxC,SAAgDK,KAAhD,CADF;IAaD,CAdA,CADH,EAiBE,MAAC,IAAD;MAAM,KAAK,EAAEhB,EAAF,oFAAX;MAAA,WACE,KAAC,SAAD;QACE,KAAK,EAAEA,EAAF,gFADP;QAEE,KAAK,EAAE;UAAEkB,SAAS,EAAE;QAAb,CAFT;QAGE,IAAI,EAAC,UAHP;QAIE,YAAY,EAAE,sBAAAP,IAAI;UAAA,OAAIN,UAAU,CAACM,IAAD,CAAd;QAAA;MAJpB,EADF,EAQE,KAAC,IAAD;QAAM,KAAK,EAAEX,EAAF,qFAAX;QAAA,UACE,KAAC,MAAD;UACE,KAAK,EAAEA,EAAF,sFADP;UAEE,KAAK,EAAE;YAAEkB,SAAS,EAAE;UAAb,CAFT;UAGE,IAAI,EAAC,WAHP;UAAA;QAAA;MADF,EARF;IAAA,EAjBF;EAAA,EADF;AAuCD,CA7DD;;AAiEA,eAAef,aAAf"},"metadata":{},"sourceType":"module"}