{"ast":null,"code":"import color from 'color';\nvar getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {\n  var theme = _ref.theme,\n    customColor = _ref.customColor;\n  if (customColor) {\n    return customColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {\n  var theme = _ref2.theme,\n    customUncheckedColor = _ref2.customUncheckedColor;\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\nvar getAndroidRippleColor = function getAndroidRippleColor(_ref3) {\n  var theme = _ref3.theme,\n    checkedColor = _ref3.checkedColor,\n    disabled = _ref3.disabled;\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\nvar getAndroidControlColor = function getAndroidControlColor(_ref4) {\n  var theme = _ref4.theme,\n    checked = _ref4.checked,\n    disabled = _ref4.disabled,\n    checkedColor = _ref4.checkedColor,\n    uncheckedColor = _ref4.uncheckedColor;\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\nexport var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {\n  var theme = _ref5.theme,\n    disabled = _ref5.disabled,\n    checked = _ref5.checked,\n    customColor = _ref5.customColor,\n    customUncheckedColor = _ref5.customUncheckedColor;\n  var checkedColor = getAndroidCheckedColor({\n    theme: theme,\n    customColor: customColor\n  });\n  var uncheckedColor = getAndroidUncheckedColor({\n    theme: theme,\n    customUncheckedColor: customUncheckedColor\n  });\n  return {\n    rippleColor: getAndroidRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    }),\n    selectionControlColor: getAndroidControlColor({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      checkedColor: checkedColor,\n      uncheckedColor: uncheckedColor\n    })\n  };\n};\nvar getIOSCheckedColor = function getIOSCheckedColor(_ref6) {\n  var theme = _ref6.theme,\n    disabled = _ref6.disabled,\n    customColor = _ref6.customColor;\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n  if (customColor) {\n    return customColor;\n  }\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n  return theme.colors.accent;\n};\nvar getIOSRippleColor = function getIOSRippleColor(_ref7) {\n  var theme = _ref7.theme,\n    checkedColor = _ref7.checkedColor,\n    disabled = _ref7.disabled;\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\nexport var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {\n  var theme = _ref8.theme,\n    disabled = _ref8.disabled,\n    customColor = _ref8.customColor;\n  var checkedColor = getIOSCheckedColor({\n    theme: theme,\n    disabled: disabled,\n    customColor: customColor\n  });\n  return {\n    checkedColor: checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    })\n  };\n};","map":{"version":3,"sources":["utils.ts"],"names":["color","getAndroidCheckedColor","theme","customColor","isV3","colors","primary","accent","getAndroidUncheckedColor","customUncheckedColor","onSurfaceVariant","dark","text","alpha","rgb","string","getAndroidRippleColor","checkedColor","disabled","onSurface","fade","getAndroidControlColor","checked","uncheckedColor","onSurfaceDisabled","getAndroidSelectionControlColor","rippleColor","selectionControlColor","getIOSCheckedColor","getIOSRippleColor","getSelectionControlIOSColor"],"mappings":"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","sourcesContent":["import color from 'color';\nimport type { Theme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: Theme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: Theme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: Theme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}