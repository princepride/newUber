{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"title\", \"theme\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Divider from \"../Divider\";\nimport { withTheme } from \"../../core/theming\";\nimport { MD3Colors } from \"../../styles/themes/v3/tokens\";\n\nvar DrawerSection = function DrawerSection(_ref) {\n  var children = _ref.children,\n      title = _ref.title,\n      theme = _ref.theme,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isV3 = theme.isV3;\n  var titleColor = isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  var titleMargin = isV3 ? 28 : 16;\n  var font = isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), title && React.createElement(View, {\n    style: [styles.titleContainer, isV3 && styles.v3TitleContainer]\n  }, title && React.createElement(Text, {\n    variant: \"titleSmall\",\n    numberOfLines: 1,\n    style: [_objectSpread({\n      color: titleColor,\n      marginLeft: titleMargin\n    }, font)]\n  }, title)), children, React.createElement(Divider, _extends({}, isV3 && {\n    horizontalInset: true,\n    bold: true\n  }, {\n    style: [styles.divider, isV3 && styles.v3Divider]\n  })));\n};\n\nDrawerSection.displayName = 'Drawer.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  v3TitleContainer: {\n    height: 56\n  },\n  divider: {\n    marginTop: 4\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50\n  }\n});\nexport default withTheme(DrawerSection);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT;AAEA,SAASC,SAAT;;AAsDA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAuD;EAAA,IAApDC,QAAoD,QAApDA,QAAoD;EAAA,IAA1CC,KAA0C,QAA1CA,KAA0C;EAAA,IAAnCC,KAAmC,QAAnCA,KAAmC;EAAA,IAA5BC,KAA4B,QAA5BA,KAA4B;EAAA,IAAlBC,IAAkB;;EAC3E,IAAQC,IAAR,GAAiBH,KAAjB,CAAQG,IAAR;EACA,IAAMC,UAAU,GAAGD,IAAI,GACnBH,KAAK,CAACK,MAANL,CAAaM,gBADM,GAEnBf,KAAK,CAACS,KAAK,CAACK,MAANL,CAAaO,IAAd,CAALhB,CAAyBiB,KAAzBjB,CAA+B,IAA/BA,EAAqCkB,GAArClB,GAA2CmB,MAA3CnB,EAFJ;EAGA,IAAMoB,WAAW,GAAGR,IAAI,GAAG,EAAH,GAAQ,EAAhC;EACA,IAAMS,IAAI,GAAGT,IAAI,GAAGH,KAAK,CAACa,KAANb,CAAYc,UAAf,GAA4Bd,KAAK,CAACa,KAANb,CAAYe,MAAzD;EAEA,OACEvB,oBAACwB,IAAD;IAAMf,KAAK,EAAE,CAACgB,MAAM,CAACC,SAAR,EAAmBjB,KAAnB;EAAb,GAA4CC,IAA5C,GACGH,KAAK,IACJP,oBAACwB,IAAD;IAAMf,KAAK,EAAE,CAACgB,MAAM,CAACE,cAAR,EAAwBhB,IAAI,IAAIc,MAAM,CAACG,gBAAvC;EAAb,GACGrB,KAAK,IACJP,oBAACC,IAAD;IACE4B,OAAO,EAAC,YADV;IAEEC,aAAa,EAAE,CAFjB;IAGErB,KAAK,EAAE;MAEHV,KAAK,EAAEa,UAFJ;MAGHmB,UAAU,EAAEZ;IAHT,GAIAC,IAJA;EAHT,GAWGb,KAXH,CAFJ,CAFJ,EAoBGD,QApBH,EAqBEN,oBAACE,OAAD,eACOS,IAAI,IAAI;IAAEqB,eAAe,EAAE,IAAnB;IAAyBC,IAAI,EAAE;EAA/B,CADf;IAEExB,KAAK,EAAE,CAACgB,MAAM,CAACS,OAAR,EAAiBvB,IAAI,IAAIc,MAAM,CAACU,SAAhC;EAFT,GArBF,CADF;AARF;;AAsCA9B,aAAa,CAAC+B,WAAd/B,GAA4B,gBAA5BA;AAEA,IAAMoB,MAAM,GAAGY,UAAU,CAACC,MAAXD,CAAkB;EAC/BX,SAAS,EAAE;IACTa,YAAY,EAAE;EADL,CADoB;EAI/BZ,cAAc,EAAE;IACda,MAAM,EAAE,EADM;IAEdC,cAAc,EAAE;EAFF,CAJe;EAQ/Bb,gBAAgB,EAAE;IAChBY,MAAM,EAAE;EADQ,CARa;EAW/BN,OAAO,EAAE;IACPQ,SAAS,EAAE;EADJ,CAXsB;EAc/BP,SAAS,EAAE;IACTQ,eAAe,EAAEvC,SAAS,CAACwC;EADlB;AAdoB,CAAlBP,CAAf;AAmBA,eAAelC,SAAS,CAACE,aAAD,CAAxB","names":["color","React","Text","Divider","withTheme","MD3Colors","DrawerSection","children","title","theme","style","rest","isV3","titleColor","colors","onSurfaceVariant","text","alpha","rgb","string","titleMargin","font","fonts","titleSmall","medium","View","styles","container","titleContainer","v3TitleContainer","variant","numberOfLines","marginLeft","horizontalInset","bold","divider","v3Divider","displayName","StyleSheet","create","marginBottom","height","justifyContent","marginTop","backgroundColor","neutralVariant50"],"sources":["DrawerSection.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport { MD3Colors } from '../../styles/themes/v3/tokens';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/drawer-section.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [active, setActive] = React.useState('');\n *\n *   return (\n *     <Drawer.Section title=\"Some title\">\n *       <Drawer.Item\n *         label=\"First Item\"\n *         active={active === 'first'}\n *         onPress={() => setActive('first')}\n *       />\n *       <Drawer.Item\n *         label=\"Second Item\"\n *         active={active === 'second'}\n *         onPress={() => setActive('second')}\n *       />\n *     </Drawer.Section>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DrawerSection = ({ children, title, theme, style, ...rest }: Props) => {\n  const { isV3 } = theme;\n  const titleColor = isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n  const titleMargin = isV3 ? 28 : 16;\n  const font = isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n\n  return (\n    <View style={[styles.container, style]} {...rest}>\n      {title && (\n        <View style={[styles.titleContainer, isV3 && styles.v3TitleContainer]}>\n          {title && (\n            <Text\n              variant=\"titleSmall\"\n              numberOfLines={1}\n              style={[\n                {\n                  color: titleColor,\n                  marginLeft: titleMargin,\n                  ...font,\n                },\n              ]}\n            >\n              {title}\n            </Text>\n          )}\n        </View>\n      )}\n      {children}\n      <Divider\n        {...(isV3 && { horizontalInset: true, bold: true })}\n        style={[styles.divider, isV3 && styles.v3Divider]}\n      />\n    </View>\n  );\n};\n\nDrawerSection.displayName = 'Drawer.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  v3TitleContainer: {\n    height: 56,\n  },\n  divider: {\n    marginTop: 4,\n  },\n  v3Divider: {\n    backgroundColor: MD3Colors.neutralVariant50,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"]},"metadata":{},"sourceType":"module"}